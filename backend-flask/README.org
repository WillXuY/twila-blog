* Twila AI Chat Backend

一个企业级结构的 Flask 后端，用于支持 AI 聊天页面，支持多会话管理、消息存储、LLM 接入等功能。

** 项目结构

#+BEGIN_SRC text
backend-flask/
├── application/
│   ├── controllers/           # 路由控制器（chat、main 页面）
│   ├── services/              # 业务逻辑层
│   ├── repositories/          # 数据访问层
│   ├── models/                # 数据模型（SQLAlchemy ORM）
│   ├── errors/                # 全局异常处理
│   ├── utils/                 # 工具模块（LLM、预热等）
│   ├── static/                # 前端静态资源（css/js/images）
│   ├── templates/             # HTML 模板文件
│   ├── config.py              # 配置文件
│   ├── extensions.py          # 第三方扩展初始化
│   └── __init__.py            # Flask 应用初始化
├── wsgi.py                    # 应用入口（供 gunicorn 等使用）
├── Dockerfile                 # Docker 构建文件
├── .containerignore           # 构建镜像时忽略规则
├── requirements.txt           # 项目依赖清单
├── VERSION                    # 项目版本号标识
├── mypy.ini                   # 类型检查配置
└── README.md                  # 项目说明（当前文件）
#+END_SRC

** 项目运行

*** 软件准备

**** Debian GNU/Linux + Emacs + python-lsp

#+BEGIN_SRC bash

# 安装基本 pip, venv 模块
sudo apt install python3-pip python3-venv

# 配置国内 pip 镜像, 参考 https://mirror.tuna.tsinghua.edu.cn/help/pypi/
mkdir -p ~/.config/pip
# 使用国内镜像
cat > ~/.config/pip/pip.conf <<EOF
[global]
index-url = https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple
EOF

# 在 home 目录中新建虚拟环境文件夹
mkdir -p ~/.virtualenvs/twila-blog/
cd ~/.virtualenvs/
# 初始化虚拟环境,并进入
python3 -m venv twila-blog
source twila-blog/bin/activate
# 这个命令在虚拟环境中运行,安装项目所需依赖
pip install -r /path/to/project/requirements.txt

# 以下内容为 Emacs 配置 python-lsp, 继续在虚拟环境中操作
pip install 'python-lsp-server[all]'

# 配置 emacs 参考, 搜索内容: ;; 配置 pylsp 给 eglot
# https://github.com/WillXuY/will_xu_config/blob/main/.emacs.d/lisp/init-local.el

#+END_SRC
