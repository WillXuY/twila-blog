#+TITLE: Twila 项目启动与配置指南
#+AUTHOR: Will Xu

* I - 项目简介
这是一个基于 Flask 构建的 python web 项目, 目前提供了交互式 AI 对话服务。

在线示例网站: [[https://twila.top][twila.top]]

** 1 - 为什么叫 Twila?
- Twila 是一个递归缩写: =TWILA Whispers Ideas Lyrically & Aesthetically=.
- 中文含义: 黄昏女孩如诗般唯美地低语着灵感。

** 2 - 功能特性
1. 支持与 Ollama 大语言模型交互。
2. 使用 PostgreSQL 数据库持久化对话历史。
3. 提供 Swagger UI 接口文档。

* II - 项目启动指南
** 1 - Windows 下开发环境的 [[file:content/org/windows-run.org][参考文档]]

** 2 - Debian / Unix-like 系统开发或生产环境
- 1. 安装必要软件 Bash, python3, podman

- 2. 创建并启用 python 虚拟环境 ~make venv~

- 3. 启动交互式脚本 ~make start~

** 3 - 启动完成后, 访问相关的网络配置
*** 1. 开发环境(默认 Flask debug 模式) 直接访问 [[localhost:5000][默认页面]]

*** 2. 生产环境(使用容器化启动 Flask) 需要额外配置 nginx
1. 安装 nginx ~sudo apt install nginx~ 或者 ~sudo dnf install nginx~

2. nginx 提供了两个默认模板，在 config/nginx/ 目录下
   - [[file:config/nginx/twila_http.conf][twila_http.conf]] 没有 https 证书时推荐使用的默认配置
   - [[file:config/nginx/twila_https.conf][twila_https.conf]] 有 https 证书时推荐使用的默认配置

3. nginx 配置文件的使用

*两个文件中都存在需要修改的模板域名信息：*
=server_name twila.top;  # 或你的域名=
请按需修改，或不做修改直接用 ip 地址访问 http 的配置文件

#+BEGIN_SRC bash
# 在测试环境中, 这个配置可以直接使用 ip 访问:
sudo cp config/nginx/twila_http.conf /etc/nginx/conf.d/twila.conf
# 在生产环境中（证书已存在）：
sudo cp config/nginx/twila_https.conf /etc/nginx/conf.d/twila.conf
# 启用新的 nginx 规则
sudo nginx -s reload
#+END_SRC

4. 启动完成后可以访问自定义域名,例如: [[https://twila.top]], 或者直接访问 http 的 ip 地址使用。

* III - 项目结构简要说明
#+BEGIN_SRC
.
├── backend-flask/               # Flask 后端主程序
├── content/                     # 各类文档与图示资源
│   ├── org/                     # Org-mode 格式的文档
│       └── windows-run.org      # Windows 启动参考文档
│   └── picture/                 # Org 文档的图片
│       ├── pgsql-extension.jpg
│       ├── pgsql-password.jpg
│       └── psql-shell.jpg
├── scripts/                     # 项目启动辅助脚本
├── secrets/                     # 加密环境变量文件
│   ├── .env.dev.gpg
│   └── .env.prod.gpg
├── env.example                 # 示例环境变量配置文件
├── .dir-locals.el               # Emacs 本地配置
├── README.org                   # 本说明文档（Org 格式）
├── setup.cfg                    # Python 项目配置文件
└── start.py                     # 项目主启动脚本
#+END_SRC
